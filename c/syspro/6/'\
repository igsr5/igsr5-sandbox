#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/wait.h>

int main()
{
	pid_t pid;
	int status;
	int fd;
        fd = open("pipe_out.txt", O_WRONLY | O_CREAT | O_TRUNC, 0644);
        if (fd == -1) {
          perror("open failed");
          exit(EXIT_FAILURE);
        }

        printf("Exec ps command...\n");
        pid = fork();
        if (pid == 0) {
          if (dup2(fd, STDOUT_FILENO) != STDOUT_FILENO) {
            perror("dup2 failed");
            close(fd);
            exit(EXIT_FAILURE);
          }
          execlp("ps", "ps", NULL);
        } else {
          wait(&status);

          // 親プロセスの場合
          if (dup2(fd, STDIN_FILENO) != STDIN_FILENO ) {
            perror("dup2 failed");
            exit(EXIT_FAILURE);
          };

          close(fd);
          execlp("grep", "grep", "bash", NULL);
        }

	return 0;
}
